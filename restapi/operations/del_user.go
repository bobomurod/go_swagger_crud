// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// DelUserHandlerFunc turns a function with the right signature into a del user handler
type DelUserHandlerFunc func(DelUserParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DelUserHandlerFunc) Handle(params DelUserParams) middleware.Responder {
	return fn(params)
}

// DelUserHandler interface for that can handle valid del user params
type DelUserHandler interface {
	Handle(DelUserParams) middleware.Responder
}

// NewDelUser creates a new http.Handler for the del user operation
func NewDelUser(ctx *middleware.Context, handler DelUserHandler) *DelUser {
	return &DelUser{Context: ctx, Handler: handler}
}

/*DelUser swagger:route DELETE /users/{userId} users _delete delUser

Deletes user

Deletes user by specified id

*/
type DelUser struct {
	Context *middleware.Context
	Handler DelUserHandler
}

func (o *DelUser) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDelUserParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DelUserBadRequestBody del user bad request body
// swagger:model DelUserBadRequestBody
type DelUserBadRequestBody struct {

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this del user bad request body
func (o *DelUserBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DelUserBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DelUserBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DelUserBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DelUserInternalServerErrorBody del user internal server error body
// swagger:model DelUserInternalServerErrorBody
type DelUserInternalServerErrorBody struct {

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this del user internal server error body
func (o *DelUserInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DelUserInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DelUserInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DelUserInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DelUserNotFoundBody del user not found body
// swagger:model DelUserNotFoundBody
type DelUserNotFoundBody struct {

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this del user not found body
func (o *DelUserNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DelUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DelUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DelUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
