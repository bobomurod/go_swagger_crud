// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"lastTask/restapi/operations/users"
	"net/http"

	"github.com/go-openapi/runtime"

	"users-api/models"
)

// AddUserOKCode is the HTTP code returned for type AddUserOK
const AddUserOKCode int = 200

/*AddUserOK User added

swagger:response addUserOK
*/
type AddUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewAddUserOK creates AddUserOK with default headers values
func NewAddUserOK() *AddUserOK {
	//posted := users.AddUserParams{}
	//return &AddUserOK{Payload:posted}
	fmt.Println(users.AddUserParams{})
	return &AddUserOK{}
}

// WithPayload adds the payload to the add user o k response
func (o *AddUserOK) WithPayload(payload *models.User) *AddUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user o k response
func (o *AddUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserBadRequestCode is the HTTP code returned for type AddUserBadRequest
const AddUserBadRequestCode int = 400

/*AddUserBadRequest Invalid request

swagger:response addUserBadRequest
*/
type AddUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *AddUserBadRequestBody `json:"body,omitempty"`
}

// NewAddUserBadRequest creates AddUserBadRequest with default headers values
func NewAddUserBadRequest() *AddUserBadRequest {

	return &AddUserBadRequest{}
}

// WithPayload adds the payload to the add user bad request response
func (o *AddUserBadRequest) WithPayload(payload *AddUserBadRequestBody) *AddUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user bad request response
func (o *AddUserBadRequest) SetPayload(payload *AddUserBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserInternalServerErrorCode is the HTTP code returned for type AddUserInternalServerError
const AddUserInternalServerErrorCode int = 500

/*AddUserInternalServerError Something went wrong

swagger:response addUserInternalServerError
*/
type AddUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *AddUserInternalServerErrorBody `json:"body,omitempty"`
}

// NewAddUserInternalServerError creates AddUserInternalServerError with default headers values
func NewAddUserInternalServerError() *AddUserInternalServerError {

	return &AddUserInternalServerError{}
}

// WithPayload adds the payload to the add user internal server error response
func (o *AddUserInternalServerError) WithPayload(payload *AddUserInternalServerErrorBody) *AddUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user internal server error response
func (o *AddUserInternalServerError) SetPayload(payload *AddUserInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
