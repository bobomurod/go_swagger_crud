// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "users-api/models"
)

// UpdateUserByIDOKCode is the HTTP code returned for type UpdateUserByIDOK
const UpdateUserByIDOKCode int = 200

/*UpdateUserByIDOK OK

swagger:response updateUserByIdOK
*/
type UpdateUserByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewUpdateUserByIDOK creates UpdateUserByIDOK with default headers values
func NewUpdateUserByIDOK() *UpdateUserByIDOK {

	return &UpdateUserByIDOK{}
}

// WithPayload adds the payload to the update user by Id o k response
func (o *UpdateUserByIDOK) WithPayload(payload *models.User) *UpdateUserByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id o k response
func (o *UpdateUserByIDOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDBadRequestCode is the HTTP code returned for type UpdateUserByIDBadRequest
const UpdateUserByIDBadRequestCode int = 400

/*UpdateUserByIDBadRequest Invalid request

swagger:response updateUserByIdBadRequest
*/
type UpdateUserByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *UpdateUserByIDBadRequestBody `json:"body,omitempty"`
}

// NewUpdateUserByIDBadRequest creates UpdateUserByIDBadRequest with default headers values
func NewUpdateUserByIDBadRequest() *UpdateUserByIDBadRequest {

	return &UpdateUserByIDBadRequest{}
}

// WithPayload adds the payload to the update user by Id bad request response
func (o *UpdateUserByIDBadRequest) WithPayload(payload *UpdateUserByIDBadRequestBody) *UpdateUserByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id bad request response
func (o *UpdateUserByIDBadRequest) SetPayload(payload *UpdateUserByIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDNotFoundCode is the HTTP code returned for type UpdateUserByIDNotFound
const UpdateUserByIDNotFoundCode int = 404

/*UpdateUserByIDNotFound Not found

swagger:response updateUserByIdNotFound
*/
type UpdateUserByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *UpdateUserByIDNotFoundBody `json:"body,omitempty"`
}

// NewUpdateUserByIDNotFound creates UpdateUserByIDNotFound with default headers values
func NewUpdateUserByIDNotFound() *UpdateUserByIDNotFound {

	return &UpdateUserByIDNotFound{}
}

// WithPayload adds the payload to the update user by Id not found response
func (o *UpdateUserByIDNotFound) WithPayload(payload *UpdateUserByIDNotFoundBody) *UpdateUserByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id not found response
func (o *UpdateUserByIDNotFound) SetPayload(payload *UpdateUserByIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDInternalServerErrorCode is the HTTP code returned for type UpdateUserByIDInternalServerError
const UpdateUserByIDInternalServerErrorCode int = 500

/*UpdateUserByIDInternalServerError Something went wrong

swagger:response updateUserByIdInternalServerError
*/
type UpdateUserByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *UpdateUserByIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewUpdateUserByIDInternalServerError creates UpdateUserByIDInternalServerError with default headers values
func NewUpdateUserByIDInternalServerError() *UpdateUserByIDInternalServerError {

	return &UpdateUserByIDInternalServerError{}
}

// WithPayload adds the payload to the update user by Id internal server error response
func (o *UpdateUserByIDInternalServerError) WithPayload(payload *UpdateUserByIDInternalServerErrorBody) *UpdateUserByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id internal server error response
func (o *UpdateUserByIDInternalServerError) SetPayload(payload *UpdateUserByIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
